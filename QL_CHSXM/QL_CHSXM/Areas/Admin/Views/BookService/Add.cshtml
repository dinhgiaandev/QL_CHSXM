@model QL_CHSXM.Models.EF.BookService
@{
    ViewBag.Title = "Thêm mới lịch hẹn";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@{
    var services = ViewBag.ServicesList as List<dynamic>;
    var products = ViewBag.ProductsList as List<dynamic>;
}

<link rel="stylesheet" href="~/Content/plugins/fontawesome-free/css/all.min.css">
<!-- daterange picker -->
<link rel="stylesheet" href="~/Content/plugins/daterangepicker/daterangepicker.css">
<!-- iCheck for checkboxes and radio inputs -->
<link rel="stylesheet" href="~/Content/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
<!-- Bootstrap Color Picker -->
<link rel="stylesheet" href="~/Content/plugins/bootstrap-colorpicker/css/bootstrap-colorpicker.min.css">
<!-- Tempusdominus Bootstrap 4 -->
<link rel="stylesheet" href="~/Content/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">

<style>
    .select2-container--default .select2-results__option--highlighted[aria-selected] {
        background-color: #007bff !important; /* Màu nền khi hover */
        color: white !important;
    }

    .select2-container--default .select2-results__option[aria-selected=true] {
        background-color: #6bb397 !important; /* Màu nền khi được chọn */
        color: white !important;
    }

    .select2-container--default .select2-selection--multiple .select2-selection__choice {
        background-color: #6bb397 !important; /* Màu nền của mục đã chọn */
        color: white !important;
        border: 1px solid #20c997 !important;
    }

    .select2-container--default .select2-selection--multiple .select2-selection__choice__remove {
        color: #fff !important;
    }

        .select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover {
            color: #dc3545 !important;
        }
</style>

@section naviheader{
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/home" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/category" class="nav-link">Danh mục</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Thêm mới</a>
        </li>
    </ul>
}

<section class="content-header">
</section>

<section class="content" style="margin: 0px 40px 20px 40px">
    <div class="card">
        <div class="card-body">
            <div class="bs-stepper-content">
                @using (Html.BeginForm("Add", "BookService", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    <div id="logins-part" class="content active dstepper-block" role="tabpanel" aria-labelledby="logins-part-trigger">
                        <div class="form-group">
                            <label for="exampleInputEmail1">Tên khách hàng</label>
                            @Html.TextBoxFor(x => x.FullName, new { @class = "form-control", @placeholder = "Nhập họ và tên" })
                            @Html.ValidationMessageFor(x => x.FullName, null, new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="exampleInputEmail1">Số điện thoại khách hàng</label>
                            @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", @placeholder = "Nhập số điện thoại" })
                            @Html.ValidationMessageFor(x => x.Phone, null, new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="exampleInputEmail1">Email khách hàng</label>
                            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "Nhập email" })
                            @Html.ValidationMessageFor(x => x.Email, null, new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="exampleInputEmail1">Tên của phương tiện</label>
                            @Html.TextBoxFor(x => x.NameCar, new { @class = "form-control", @placeholder = "Nhập tên xe" })
                            @Html.ValidationMessageFor(x => x.NameCar, null, new { @class = "text-danger" })
                        </div>

                        <div class="form-group" id="product-dropdown" name="ProductIds">
                            @Html.LabelFor(model => model.ProductIds, "Chọn phụ tùng", htmlAttributes: new { @class = "control-label col-md-6" })
                            @Html.ListBoxFor(model => model.ProductIds, ViewBag.Products as MultiSelectList, new { @class = "form-control select2", @id = "product-dropdown", multiple = "multiple" })
                            @Html.ValidationMessageFor(model => model.ProductIds, "", new { @class = "text-danger" })
                        </div>
                          <div class="form-group" id="service-dropdown" name="ServiceIds">
                            @Html.LabelFor(model => model.ServiceIds, "Chọn dịch vụ", htmlAttributes: new { @class = "control-label col-md-6" })
                            @Html.ListBoxFor(model => model.ServiceIds, ViewBag.Services as MultiSelectList, new { @class = "form-control select2", @id = "service-dropdown", multiple = "multiple" })
                            @Html.ValidationMessageFor(model => model.ServiceIds, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="exampleInputEmail1">Chọn thời gian hẹn</label>
                            <div class="input-group date" id="reservationdatetime" data-target-input="nearest">
                                @Html.TextBoxFor(x => x.BookingDate, new { @class = "form-control datetimepicker-input", @data_target = "#reservationdatetime" })
                                <div class="input-group-append" data-target="#reservationdatetime" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(x => x.BookingDate, null, new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="totalPrice">Tổng tiền:</label>
                            <input type="text" id="totalPrice" class="form-control" readonly />
                        </div>

                        <div class="form-group">
                            <a href="@Url.Action("Index")" class="btn btn-danger">Quay lại</a>
                            <button type="submit" class="btn btn-primary">Tạo lịch hẹn</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section scripts{
    <script src="~/Scripts/jsConvert.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.select2').select2({
                placeholder: "Chọn mục",
                allowClear: true
            });
        });
    </script>
}
<script src="~/Content/plugins/jquery/jquery.min.js"></script>

<!-- Select2 -->
<script src="~/Content/plugins/select2/js/select2.full.min.js"></script>
<!-- Bootstrap4 Duallistbox -->
<script src="~/Content/plugins/bootstrap4-duallistbox/jquery.bootstrap-duallistbox.min.js"></script>
<!-- InputMask -->
<script src="~/Content/plugins/moment/moment.min.js"></script>
<script src="~/Content/plugins/inputmask/jquery.inputmask.min.js"></script>
<!-- date-range-picker -->
<script src="~/Content/plugins/daterangepicker/daterangepicker.js"></script>
<!-- bootstrap color picker -->
<script src="~/Content/plugins/bootstrap-colorpicker/js/bootstrap-colorpicker.min.js"></script>
<!-- Tempusdominus Bootstrap 4 -->
<script src="~/Content/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
<!-- Bootstrap Switch -->
<script src="~/Content/plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
<!-- BS-Stepper -->
<script src="~/Content/plugins/bs-stepper/js/bs-stepper.min.js"></script>
<!-- dropzonejs -->
<script src="~/Content/plugins/dropzone/min/dropzone.min.js"></script>

<!-- date-range-picker -->
<script src="~/Content/plugins/daterangepicker/daterangepicker.js"></script>
<!-- bootstrap color picker -->
<script src="~/Content/plugins/bootstrap-colorpicker/js/bootstrap-colorpicker.min.js"></script>
<!-- Tempusdominus Bootstrap 4 -->
<script src="~/Content/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
<!-- Bootstrap Switch -->
<script src="~/Content/plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
<!-- BS-Stepper -->
<script src="~/Content/plugins/bs-stepper/js/bs-stepper.min.js"></script>
<!-- dropzonejs -->
<script src="~/Content/plugins/dropzone/min/dropzone.min.js"></script>
<script>
        $(function () {
        var products = @Json.Encode(ViewBag.ProductsList);
        var services = @Json.Encode(ViewBag.ServicesList);

        function getProductPrice(productId) {
            var product = products.find(p => p.Id == productId);
            return product ? product.Price : 0;
        }

        function getServicePrice(serviceId) {
            var service = services.find(s => s.Id == serviceId);
            return service ? service.Price : 0;
        }

        function updateTotalPrice() {
            var productId = $('#product-dropdown').val();
            var serviceId = $('#service-dropdown').val();
            console.log("Selected Product ID:", productId);
            console.log("Selected Service ID:", serviceId);

            var productPrice = getProductPrice(productId);
            var servicePrice = getServicePrice(serviceId);
            console.log("Product Price:", productPrice);
            console.log("Service Price:", servicePrice);

            var totalPrice = productPrice + servicePrice;
            console.log("Total Price:", totalPrice);

            $('#totalPrice').val(totalPrice.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }));
        }

        $('#product-dropdown').change(updateTotalPrice);
        $('#service-dropdown').change(updateTotalPrice);

        // Call updateTotalPrice initially to set the initial value
            updateTotalPrice();

</script>
<script>
    $(function () {
        //Initialize Select2 Elements
        $('.select2').select2()

        //Initialize Select2 Elements
        $('.select2bs4').select2({
            theme: 'bootstrap4'
        })

        //Datemask dd/mm/yyyy
        $('#datemask').inputmask('dd/MM/yyyy', { 'placeholder': 'dd/MM/yyyy' })
        //Datemask2 mm/dd/yyyy
        $('#datemask2').inputmask('dd/MM/yyyy', { 'placeholder': 'dd/MM/yyyy' })
        //Money Euro
        $('[data-mask]').inputmask()

        //Date picker
        $('#reservationdate').datetimepicker({
            format: 'L'
        });

        //Date and time picker
        $('#reservationdatetime').datetimepicker({ icons: { time: 'far fa-clock' } });

        //Date range picker
        $('#reservation').daterangepicker()
        //Date range picker with time picker
        $('#reservationtime').daterangepicker({
            timePicker: true,
            timePickerIncrement: 30,
            locale: {
                format: 'DD/MM/YYYY hh:mm A'
            }
        })
        //Date range as a button
        $('#daterange-btn').daterangepicker(
            {
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                startDate: moment().subtract(29, 'days'),
                endDate: moment()
            },
            function (start, end) {
                $('#reportrange span').html(start.format('D MMMM, YYYY') + ' - ' + end.format('D MMMM, YYYY'))
            }
        )

        //Timepicker
        $('#timepicker').datetimepicker({
            format: 'LT'
        })

        //Bootstrap Duallistbox
        $('.duallistbox').bootstrapDualListbox()

        //Colorpicker
        $('.my-colorpicker1').colorpicker()
        //color picker with addon
        $('.my-colorpicker2').colorpicker()

        $('.my-colorpicker2').on('colorpickerChange', function (event) {
            $('.my-colorpicker2 .fa-square').css('color', event.color.toString());
        })

        $("input[data-bootstrap-switch]").each(function () {
            $(this).bootstrapSwitch('state', $(this).prop('checked'));
        })

    })
    // BS-Stepper Init
    document.addEventListener('DOMContentLoaded', function () {
        window.stepper = new Stepper(document.querySelector('.bs-stepper'))
    })

    // DropzoneJS Demo Code Start
    Dropzone.autoDiscover = false

    // Get the template HTML and remove it from the doumenthe template HTML and remove it from the doument
    var previewNode = document.querySelector("#template")
    previewNode.id = ""
    var previewTemplate = previewNode.parentNode.innerHTML
    previewNode.parentNode.removeChild(previewNode)

    var myDropzone = new Dropzone(document.body, { // Make the whole body a dropzone
        url: "/target-url", // Set the url
        thumbnailWidth: 80,
        thumbnailHeight: 80,
        parallelUploads: 20,
        previewTemplate: previewTemplate,
        autoQueue: false, // Make sure the files aren't queued until manually added
        previewsContainer: "#previews", // Define the container to display the previews
        clickable: ".fileinput-button" // Define the element that should be used as click trigger to select files.
    })

    myDropzone.on("addedfile", function (file) {
        // Hookup the start button
        file.previewElement.querySelector(".start").onclick = function () { myDropzone.enqueueFile(file) }
    })

    // Update the total progress bar
    myDropzone.on("totaluploadprogress", function (progress) {
        document.querySelector("#total-progress .progress-bar").style.width = progress + "%"
    })

    myDropzone.on("sending", function (file) {
        // Show the total progress bar when upload starts
        document.querySelector("#total-progress").style.opacity = "1"
        // And disable the start button
        file.previewElement.querySelector(".start").setAttribute("disabled", "disabled")
    })

    // Hide the total progress bar when nothing's uploading anymore
    myDropzone.on("queuecomplete", function (progress) {
        document.querySelector("#total-progress").style.opacity = "0"
    })

    // Setup the buttons for all transfers
    // The "add files" button doesn't need to be setup because the config
    // clickable has already been specified.
    document.querySelector("#actions .start").onclick = function () {
        myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED))
    }
    document.querySelector("#actions .cancel").onclick = function () {
        myDropzone.removeAllFiles(true)
    }
</script>