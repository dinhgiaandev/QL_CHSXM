@model QL_CHSXM.Models.EF.BookService

@{
    ViewBag.Title = "Đặt lịch hẹn";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/assets/styles/contact_styles.css" rel="stylesheet" />
<link rel="stylesheet" type="text/css" href="~/Content/assets/styles/bootstrap4/bootstrap.min.css">
<link rel="stylesheet" href="path/to/font-awesome.min.css">
<link rel="stylesheet" type="text/css" href="~/Content/assets/styles/main_styles.css">


<link rel="stylesheet" href="~/Content/plugins/fontawesome-free/css/all.min.css">
<!-- daterange picker -->
<link rel="stylesheet" href="~/Content/plugins/daterangepicker/daterangepicker.css">
<!-- iCheck for checkboxes and radio inputs -->
<link rel="stylesheet" href="~/Content/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
<!-- Bootstrap Color Picker -->
<link rel="stylesheet" href="~/Content/plugins/bootstrap-colorpicker/css/bootstrap-colorpicker.min.css">
<!-- Tempusdominus Bootstrap 4 -->
<link rel="stylesheet" href="~/Content/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">
<!-- Select2 -->
<link rel="stylesheet" href="~/Content/plugins/select2/css/select2.min.css">
<link rel="stylesheet" href="~/Content/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
<!-- Bootstrap4 Duallistbox -->
<link rel="stylesheet" href="~/Content/plugins/bootstrap4-duallistbox/bootstrap-duallistbox.min.css">
<!-- BS Stepper -->
<link rel="stylesheet" href="~/Content/plugins/bs-stepper/css/bs-stepper.min.css">
<!-- dropzonejs -->
<link rel="stylesheet" href="~/Content/plugins/dropzone/min/dropzone.min.css">
<!-- Theme style -->
<link rel="stylesheet" href="~/Content/dist/css/adminlte.min.css">



<div style="height: 150px"></div>

<div class="container-xxl py-2 px-0 wow fadeInUp" data-wow-delay="0.1s" style="background-color: #bab8b1; height: 100%">
    <div class="row g-0">
        <div class="col-md-5" style="right: -40px; width: 100px; margin-top: 28px; margin-bottom: 25px; height: 770px">
            <img src="~/Content/assets/images/fixing_motorcycle.jpg" style="background-repeat: no-repeat; background-size: cover; width: 100%; height: 100%" />
        </div>
        <!-- Default box -->
        <div class="col-md-7 px-5 py-4">
            <!-- Adjusted column for the form -->
            <div class="card border-0 shadow-sm rounded-0" style="background-color: #ffffff; height: 770px; overflow: hidden; margin-top: 4px">
                <div class="card-body">
                    <div class="bs-stepper-content">
                        @using (Html.BeginForm("Add", "BookService", FormMethod.Post, new { }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)

                        <div id="logins-part" class="content active dstepper-block" role="tabpanel" aria-labelledby="logins-part-trigger">
                            <div class="form-group">
                                <label for="exampleInputEmail1">Tên khách hàng</label>
                                @Html.TextBoxFor(x => x.FullName, new { @class = "form-control", @placeholder = "Nhập họ và tên" })
                                @Html.ValidationMessageFor(x => x.FullName, null, new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label for="exampleInputEmail1">Số điện thoại khách hàng</label>
                                @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", @placeholder = "Nhập số điện thoại" })
                                @Html.ValidationMessageFor(x => x.Phone, null, new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label for="exampleInputEmail1">Email khách hàng</label>
                                @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "Nhập email" })
                                @Html.ValidationMessageFor(x => x.Email, null, new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label for="exampleInputEmail1">Tên của phương tiện</label>
                                @Html.TextBoxFor(x => x.NameCar, new { @class = "form-control", @placeholder = "Nhập tên xe" })
                                @Html.ValidationMessageFor(x => x.NameCar, null, new { @class = "text-danger" })
                            </div>

                            <div class="form-group" id="product-dropdown" name="ProductId">
                                @Html.LabelFor(model => model.ProductId, "Chọn sản phẩm", htmlAttributes: new { @class = "control-label col-md-6" })
                                @Html.DropDownListFor(model => model.ProductId, ViewBag.Products as SelectList, "Chọn sản phẩm", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group" id="service-dropdown" name="ServiceId">
                                @Html.LabelFor(model => model.ServiceId, "Chọn dịch vụ", htmlAttributes: new { @class = "control-label col-md-6" })
                                @Html.DropDownListFor(model => model.ServiceId, ViewBag.Services as SelectList, "Chọn dịch vụ", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ServiceId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label for="exampleInputEmail1">Chọn thời gian hẹn</label>
                                <div class="input-group date" id="reservationdatetime" data-target-input="nearest">
                                    @Html.TextBoxFor(x => x.BookingDate, new { @class = "form-control datetimepicker-input", @data_target = "#reservationdatetime" })
                                    <div class="input-group-append" data-target="#reservationdatetime" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(x => x.BookingDate, null, new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <button type="submit" class="btn btn-primary">Tạo lịch hẹn</button>
                            </div>
                        </div>}
                    </div>
                </div>
                <!-- /.card-body -->
            </div>
        </div>
    </div>
    </div>

<!-- jQuery -->
<script src="~/Content/plugins/jquery/jquery.min.js"></script>

<!-- Select2 -->
<script src="~/Content/plugins/select2/js/select2.full.min.js"></script>
<!-- Bootstrap4 Duallistbox -->
<script src="~/Content/plugins/bootstrap4-duallistbox/jquery.bootstrap-duallistbox.min.js"></script>
<!-- InputMask -->
<script src="~/Content/plugins/moment/moment.min.js"></script>
<script src="~/Content/plugins/inputmask/jquery.inputmask.min.js"></script>
<!-- date-range-picker -->
<script src="~/Content/plugins/daterangepicker/daterangepicker.js"></script>
<!-- bootstrap color picker -->
<script src="~/Content/plugins/bootstrap-colorpicker/js/bootstrap-colorpicker.min.js"></script>
<!-- Tempusdominus Bootstrap 4 -->
<script src="~/Content/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
<!-- Bootstrap Switch -->
<script src="~/Content/plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
<!-- BS-Stepper -->
<script src="~/Content/plugins/bs-stepper/js/bs-stepper.min.js"></script>
<!-- dropzonejs -->
<script src="~/Content/plugins/dropzone/min/dropzone.min.js"></script>
<script>
    $(function () {
        //Initialize Select2 Elements
        $('.select2').select2()

        //Initialize Select2 Elements
        $('.select2bs4').select2({
            theme: 'bootstrap4'
        })

        //Datemask dd/mm/yyyy
        $('#datemask').inputmask('dd/mm/yyyy', { 'placeholder': 'dd/mm/yyyy' })
        //Datemask2 mm/dd/yyyy
        $('#datemask2').inputmask('mm/dd/yyyy', { 'placeholder': 'mm/dd/yyyy' })
        //Money Euro
        $('[data-mask]').inputmask()

        //Date picker
        $('#reservationdate').datetimepicker({
            format: 'L'
        });

        //Date and time picker
        $('#reservationdatetime').datetimepicker({ icons: { time: 'far fa-clock' } });

        //Date range picker
        $('#reservation').daterangepicker()
        //Date range picker with time picker
        $('#reservationtime').daterangepicker({
            timePicker: true,
            timePickerIncrement: 30,
            locale: {
                format: 'MM/DD/YYYY hh:mm A'
            }
        })
        //Date range as a button
        $('#daterange-btn').daterangepicker(
            {
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                startDate: moment().subtract(29, 'days'),
                endDate: moment()
            },
            function (start, end) {
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'))
            }
        )

        //Timepicker
        $('#timepicker').datetimepicker({
            format: 'LT'
        })

        //Bootstrap Duallistbox
        $('.duallistbox').bootstrapDualListbox()

        //Colorpicker
        $('.my-colorpicker1').colorpicker()
        //color picker with addon
        $('.my-colorpicker2').colorpicker()

        $('.my-colorpicker2').on('colorpickerChange', function (event) {
            $('.my-colorpicker2 .fa-square').css('color', event.color.toString());
        })

        $("input[data-bootstrap-switch]").each(function () {
            $(this).bootstrapSwitch('state', $(this).prop('checked'));
        })

    })
    // BS-Stepper Init
    document.addEventListener('DOMContentLoaded', function () {
        window.stepper = new Stepper(document.querySelector('.bs-stepper'))
    })

    // DropzoneJS Demo Code Start
    Dropzone.autoDiscover = false

    // Get the template HTML and remove it from the doumenthe template HTML and remove it from the doument
    var previewNode = document.querySelector("#template")
    previewNode.id = ""
    var previewTemplate = previewNode.parentNode.innerHTML
    previewNode.parentNode.removeChild(previewNode)

    var myDropzone = new Dropzone(document.body, { // Make the whole body a dropzone
        url: "/target-url", // Set the url
        thumbnailWidth: 80,
        thumbnailHeight: 80,
        parallelUploads: 20,
        previewTemplate: previewTemplate,
        autoQueue: false, // Make sure the files aren't queued until manually added
        previewsContainer: "#previews", // Define the container to display the previews
        clickable: ".fileinput-button" // Define the element that should be used as click trigger to select files.
    })

    myDropzone.on("addedfile", function (file) {
        // Hookup the start button
        file.previewElement.querySelector(".start").onclick = function () { myDropzone.enqueueFile(file) }
    })

    // Update the total progress bar
    myDropzone.on("totaluploadprogress", function (progress) {
        document.querySelector("#total-progress .progress-bar").style.width = progress + "%"
    })

    myDropzone.on("sending", function (file) {
        // Show the total progress bar when upload starts
        document.querySelector("#total-progress").style.opacity = "1"
        // And disable the start button
        file.previewElement.querySelector(".start").setAttribute("disabled", "disabled")
    })

    // Hide the total progress bar when nothing's uploading anymore
    myDropzone.on("queuecomplete", function (progress) {
        document.querySelector("#total-progress").style.opacity = "0"
    })

    // Setup the buttons for all transfers
    // The "add files" button doesn't need to be setup because the config
    // `clickable` has already been specified.
    document.querySelector("#actions .start").onclick = function () {
        myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED))
    }
    document.querySelector("#actions .cancel").onclick = function () {
        myDropzone.removeAllFiles(true)
    }
  // DropzoneJS Demo Code End
</script>